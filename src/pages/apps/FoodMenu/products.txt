import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import { Row, Col, Card, Button } from 'react-bootstrap';
 
// components
import PageTitle from '../../../components/PageTitle';
import AddFoodModal from './AddFoodModal';
import UpdateFoodModal from './UpdateFoodModal';
 
// API functions
import { fetchFoodMenuApi, deleteFoodMenuApi, FoodMenu } from '../../../server/allApi';
 
// main component
const Products: React.FC = () => {
  const [foodMenu, setFoodMenu] = useState<FoodMenu[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [showAddModal, setShowAddModal] = useState<boolean>(false);
  const [showUpdateModal, setShowUpdateModal] = useState<boolean>(false);
  const [currentFood, setCurrentFood] = useState<FoodMenu | null>(null);
 
  useEffect(() => {
    fetchFoodMenuApi()
      .then((data) => {
        setFoodMenu(data);
        setLoading(false);
      })
      .catch((error) => {
        console.error('Error fetching food menu:', error);
        setError(error.message);
        setLoading(false);
      });
  }, []);
 
  if (loading) {
    return <div>Loading...</div>;
  }
 
  if (error) {
    return <div>Error: {error}</div>;
  }
 
  const handleDelete = async (id: string) => {
    try {
      await deleteFoodMenuApi(id);
      setFoodMenu((prevFoodMenu) => prevFoodMenu.filter(item => item._id !== id));
      alert('Food item deleted successfully');
    } catch (error) {
      console.error('Error deleting food item:', error);
      alert('Error deleting food item');
    }
  };
 
  const handleAddFood = (newFood: FoodMenu) => {
    setFoodMenu((prevFoodMenu) => [...prevFoodMenu, newFood]);
  };
 
  const handleUpdateFood = (updatedFood: FoodMenu) => {
    setFoodMenu((prevFoodMenu) =>
      prevFoodMenu.map(item => (item._id === updatedFood._id ? updatedFood : item))
    );
  };
 
  const openUpdateModal = (food: FoodMenu) => {
    setCurrentFood(food);
    setShowUpdateModal(true);
  };
 
  return (
    <React.Fragment>
      <PageTitle
        breadCrumbItems={[
          { label: 'Ecommerce', path: '/apps/products' },
          { label: 'Products', path: '/apps/food', active: true },
        ]}
        title={'Products'}
      />
 
      <Row>
        <Col>
          <Card>
            <Card.Body>
              <Row className="justify-content-between">
                <Col className="col-auto">
                  <form className="d-flex flex-wrap align-items-center">
                    <label htmlFor="inputPassword2" className="visually-hidden">
                      Search
                    </label>
                    <div className="me-3">
                      <input
                        type="search"
                        className="form-control my-1 my-lg-0"
                        id="inputPassword2"
                        placeholder="Search..."
                        // onChange={(e: any) => searchProduct(e.target.value)}
                      />
                    </div>
                    <label htmlFor="status-select" className="me-2">
                      Sort By
                    </label>
                    <div className="me-sm-3">
                      <select
                        className="form-select my-1 my-lg-0"
                        id="status-select"
                      >
                        <option defaultValue="all">All</option>
                        <option value="popular">Popular</option>
                        <option value="pricelow">Price Low</option>
                        <option value="pricehigh">Price High</option>
                        <option value="soldout">Sold Out</option>
                      </select>
                    </div>
                    <Link
                      to="/apps/orders"
                      className="btn btn-dark waves-effect waves-light"
                    >
                      <i className="mdi mdi-plus-circle me-1"></i> Order History
                    </Link>
                  </form>
                </Col>
 
                <Col className="col-auto">
                  <div className="text-lg-end my-1 my-lg-0">
                    <Button className="btn btn-success waves-effect waves-light me-1">
                      <i className="mdi mdi-cog"></i>
                    </Button>
 
                    <Button
                      className="btn btn-danger waves-effect waves-light"
                      onClick={() => setShowAddModal(true)}
                    >
                      <i className="mdi mdi-plus-circle me-1"></i> Add New
                    </Button>
                  </div>
                </Col>
              </Row>
            </Card.Body>
          </Card>
        </Col>
      </Row>
 
      <Row>
        {foodMenu.map((food) => (
          <Col key={food._id} md={6} xl={3}>
            <Card className="product-box">
              <Card.Body>
                <div className="product-action">
                  <Button
                    className="btn btn-success btn-xs waves-effect waves-light me-1"
                    onClick={() => openUpdateModal(food)}
                  >
                    <i className="mdi mdi-pencil"></i>
                  </Button>
                  <Button
                    className="btn btn-danger btn-xs waves-effect waves-light"
                    onClick={() => handleDelete(food._id)}
                  >
                    <i className="mdi mdi-close"></i>
                  </Button>
                </div>
 
                <div className="bg-light">
                  <img src={food.image_url} alt="" className="img-fluid" />
                </div>
 
                <div className="product-info">
                  <div className="row align-items-center">
                    <div className="col">
                      <h5 className="font-16 mt-0 sp-line-1">
                        <Link
                          to="/apps/ecommerce/product-details"
                          className="text-dark"
                        >
                          {food.food_name}
                        </Link>
                      </h5>
                      <div className="text-warning mb-2 font-13">
                        <i className="fa fa-star me-1"></i>
                        <i className="fa fa-star me-1"></i>
                        <i className="fa fa-star me-1"></i>
                        <i className="fa fa-star me-1"></i>
                        <i className="fa fa-star"></i>
                      </div>
                      <h5 className="m-0">
                        <span className="text-muted"> {food.food_description} pcs</span>
                      </h5>
                    </div>
                    <div className="col-auto">
                      <div className="product-price-tag">
                        ₹{food.food_price}
                      </div>
                    </div>
                  </div>
                </div>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
 
      <Row>
        <Col>
          <ul className="pagination pagination-rounded justify-content-end mb-3">
            <li className="page-item">
              <Link className="page-link" to="#" aria-label="Previous">
                <span aria-hidden="true">«</span>
                <span className="visually-hidden">Previous</span>
              </Link>
            </li>
            <li className="page-item active">
              <Link className="page-link" to="#">
                1
              </Link>
            </li>
            <li className="page-item">
              <Link className="page-link" to="#">
                2
              </Link>
            </li>
            <li className="page-item">
              <Link className="page-link" to="#">
                3
              </Link>
            </li>
            <li className="page-item">
              <Link className="page-link" to="#">
                4
              </Link>
            </li>
            <li className="page-item">
              <Link className="page-link" to="#">
                5
              </Link>
            </li>
            <li className="page-item">
              <Link className="page-link" to="#" aria-label="Next">
                <span aria-hidden="true">»</span>
                <span className="visually-hidden">Next</span>
              </Link>
            </li>
          </ul>
        </Col>
      </Row>
 
      <AddFoodModal show={showAddModal} onHide={() => setShowAddModal(false)} onSubmit={handleAddFood} />
      {currentFood && (
        <UpdateFoodModal
          show={showUpdateModal}
          onHide={() => setShowUpdateModal(false)}
          foodItem={currentFood}
          onUpdateFood={handleUpdateFood}
        />
      )}
    </React.Fragment>
  );
};
 
export default Products;